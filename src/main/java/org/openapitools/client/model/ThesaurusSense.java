/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DomainClassesList;
import org.openapitools.client.model.DomainsList;
import org.openapitools.client.model.RegionsList;
import org.openapitools.client.model.RegistersList;
import org.openapitools.client.model.SemanticClassesList;

/**
 * A lexical sense represents the lexical meaning of a lexical entry when interpreted as referring to the corresponding ontology element
 */
@ApiModel(description = "A lexical sense represents the lexical meaning of a lexical entry when interpreted as referring to the corresponding ontology element")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-26T13:13:15.302+09:00[Asia/Tokyo]")
public class ThesaurusSense {
  public static final String SERIALIZED_NAME_ANTONYMS = "antonyms";
  @SerializedName(SERIALIZED_NAME_ANTONYMS)
  private List<Object> antonyms = null;

  public static final String SERIALIZED_NAME_DOMAIN_CLASSES = "domainClasses";
  @SerializedName(SERIALIZED_NAME_DOMAIN_CLASSES)
  private DomainClassesList domainClasses;

  public static final String SERIALIZED_NAME_DOMAINS = "domains";
  @SerializedName(SERIALIZED_NAME_DOMAINS)
  private DomainsList domains;

  public static final String SERIALIZED_NAME_EXAMPLES = "examples";
  @SerializedName(SERIALIZED_NAME_EXAMPLES)
  private List<Object> examples = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_REGIONS = "regions";
  @SerializedName(SERIALIZED_NAME_REGIONS)
  private RegionsList regions;

  public static final String SERIALIZED_NAME_REGISTERS = "registers";
  @SerializedName(SERIALIZED_NAME_REGISTERS)
  private RegistersList registers;

  public static final String SERIALIZED_NAME_SEMANTIC_CLASSES = "semanticClasses";
  @SerializedName(SERIALIZED_NAME_SEMANTIC_CLASSES)
  private SemanticClassesList semanticClasses;

  public static final String SERIALIZED_NAME_SUBSENSES = "subsenses";
  @SerializedName(SERIALIZED_NAME_SUBSENSES)
  private List<ThesaurusSense> subsenses = null;

  public static final String SERIALIZED_NAME_SYNONYMS = "synonyms";
  @SerializedName(SERIALIZED_NAME_SYNONYMS)
  private List<Object> synonyms = null;

  public ThesaurusSense() { 
  }

  public ThesaurusSense antonyms(List<Object> antonyms) {
    
    this.antonyms = antonyms;
    return this;
  }

  public ThesaurusSense addAntonymsItem(Object antonymsItem) {
    if (this.antonyms == null) {
      this.antonyms = new ArrayList<Object>();
    }
    this.antonyms.add(antonymsItem);
    return this;
  }

   /**
   * Get antonyms
   * @return antonyms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getAntonyms() {
    return antonyms;
  }


  public void setAntonyms(List<Object> antonyms) {
    this.antonyms = antonyms;
  }


  public ThesaurusSense domainClasses(DomainClassesList domainClasses) {
    
    this.domainClasses = domainClasses;
    return this;
  }

   /**
   * Get domainClasses
   * @return domainClasses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DomainClassesList getDomainClasses() {
    return domainClasses;
  }


  public void setDomainClasses(DomainClassesList domainClasses) {
    this.domainClasses = domainClasses;
  }


  public ThesaurusSense domains(DomainsList domains) {
    
    this.domains = domains;
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DomainsList getDomains() {
    return domains;
  }


  public void setDomains(DomainsList domains) {
    this.domains = domains;
  }


  public ThesaurusSense examples(List<Object> examples) {
    
    this.examples = examples;
    return this;
  }

  public ThesaurusSense addExamplesItem(Object examplesItem) {
    if (this.examples == null) {
      this.examples = new ArrayList<Object>();
    }
    this.examples.add(examplesItem);
    return this;
  }

   /**
   * A list of written or spoken rendering of examples of use of a word or text
   * @return examples
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of written or spoken rendering of examples of use of a word or text")

  public List<Object> getExamples() {
    return examples;
  }


  public void setExamples(List<Object> examples) {
    this.examples = examples;
  }


  public ThesaurusSense id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the sense that is required for the delete procedure
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the sense that is required for the delete procedure")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ThesaurusSense regions(RegionsList regions) {
    
    this.regions = regions;
    return this;
  }

   /**
   * Get regions
   * @return regions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegionsList getRegions() {
    return regions;
  }


  public void setRegions(RegionsList regions) {
    this.regions = regions;
  }


  public ThesaurusSense registers(RegistersList registers) {
    
    this.registers = registers;
    return this;
  }

   /**
   * Get registers
   * @return registers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegistersList getRegisters() {
    return registers;
  }


  public void setRegisters(RegistersList registers) {
    this.registers = registers;
  }


  public ThesaurusSense semanticClasses(SemanticClassesList semanticClasses) {
    
    this.semanticClasses = semanticClasses;
    return this;
  }

   /**
   * Get semanticClasses
   * @return semanticClasses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SemanticClassesList getSemanticClasses() {
    return semanticClasses;
  }


  public void setSemanticClasses(SemanticClassesList semanticClasses) {
    this.semanticClasses = semanticClasses;
  }


  public ThesaurusSense subsenses(List<ThesaurusSense> subsenses) {
    
    this.subsenses = subsenses;
    return this;
  }

  public ThesaurusSense addSubsensesItem(ThesaurusSense subsensesItem) {
    if (this.subsenses == null) {
      this.subsenses = new ArrayList<ThesaurusSense>();
    }
    this.subsenses.add(subsensesItem);
    return this;
  }

   /**
   * subsenses of word
   * @return subsenses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "subsenses of word")

  public List<ThesaurusSense> getSubsenses() {
    return subsenses;
  }


  public void setSubsenses(List<ThesaurusSense> subsenses) {
    this.subsenses = subsenses;
  }


  public ThesaurusSense synonyms(List<Object> synonyms) {
    
    this.synonyms = synonyms;
    return this;
  }

  public ThesaurusSense addSynonymsItem(Object synonymsItem) {
    if (this.synonyms == null) {
      this.synonyms = new ArrayList<Object>();
    }
    this.synonyms.add(synonymsItem);
    return this;
  }

   /**
   * Get synonyms
   * @return synonyms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getSynonyms() {
    return synonyms;
  }


  public void setSynonyms(List<Object> synonyms) {
    this.synonyms = synonyms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThesaurusSense thesaurusSense = (ThesaurusSense) o;
    return Objects.equals(this.antonyms, thesaurusSense.antonyms) &&
        Objects.equals(this.domainClasses, thesaurusSense.domainClasses) &&
        Objects.equals(this.domains, thesaurusSense.domains) &&
        Objects.equals(this.examples, thesaurusSense.examples) &&
        Objects.equals(this.id, thesaurusSense.id) &&
        Objects.equals(this.regions, thesaurusSense.regions) &&
        Objects.equals(this.registers, thesaurusSense.registers) &&
        Objects.equals(this.semanticClasses, thesaurusSense.semanticClasses) &&
        Objects.equals(this.subsenses, thesaurusSense.subsenses) &&
        Objects.equals(this.synonyms, thesaurusSense.synonyms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(antonyms, domainClasses, domains, examples, id, regions, registers, semanticClasses, subsenses, synonyms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThesaurusSense {\n");
    sb.append("    antonyms: ").append(toIndentedString(antonyms)).append("\n");
    sb.append("    domainClasses: ").append(toIndentedString(domainClasses)).append("\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    examples: ").append(toIndentedString(examples)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    registers: ").append(toIndentedString(registers)).append("\n");
    sb.append("    semanticClasses: ").append(toIndentedString(semanticClasses)).append("\n");
    sb.append("    subsenses: ").append(toIndentedString(subsenses)).append("\n");
    sb.append("    synonyms: ").append(toIndentedString(synonyms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

