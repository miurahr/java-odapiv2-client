/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ThesaurusLexicalEntry;

/**
 * description of thesaurus information of a word
 */
@ApiModel(description = "description of thesaurus information of a word")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-26T13:13:15.302+09:00[Asia/Tokyo]")
public class HeadwordThesaurus {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LEXICAL_ENTRIES = "lexicalEntries";
  @SerializedName(SERIALIZED_NAME_LEXICAL_ENTRIES)
  private List<ThesaurusLexicalEntry> lexicalEntries = new ArrayList<ThesaurusLexicalEntry>();

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_WORD = "word";
  @SerializedName(SERIALIZED_NAME_WORD)
  private String word;

  public HeadwordThesaurus() { 
  }

  public HeadwordThesaurus id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The identifier of a word
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The identifier of a word")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public HeadwordThesaurus language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * IANA language code
   * @return language
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "IANA language code")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public HeadwordThesaurus lexicalEntries(List<ThesaurusLexicalEntry> lexicalEntries) {
    
    this.lexicalEntries = lexicalEntries;
    return this;
  }

  public HeadwordThesaurus addLexicalEntriesItem(ThesaurusLexicalEntry lexicalEntriesItem) {
    this.lexicalEntries.add(lexicalEntriesItem);
    return this;
  }

   /**
   * A grouping of various senses in a specific language, and a lexical category that relates to a word
   * @return lexicalEntries
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A grouping of various senses in a specific language, and a lexical category that relates to a word")

  public List<ThesaurusLexicalEntry> getLexicalEntries() {
    return lexicalEntries;
  }


  public void setLexicalEntries(List<ThesaurusLexicalEntry> lexicalEntries) {
    this.lexicalEntries = lexicalEntries;
  }


  public HeadwordThesaurus type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The json object type. Could be &#39;headword&#39;, &#39;inflection&#39; or &#39;phrase&#39;
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The json object type. Could be 'headword', 'inflection' or 'phrase'")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public HeadwordThesaurus word(String word) {
    
    this.word = word;
    return this;
  }

   /**
   * (DEPRECATED) A given written or spoken realisation of an entry, lowercased.
   * @return word
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "(DEPRECATED) A given written or spoken realisation of an entry, lowercased.")

  public String getWord() {
    return word;
  }


  public void setWord(String word) {
    this.word = word;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HeadwordThesaurus headwordThesaurus = (HeadwordThesaurus) o;
    return Objects.equals(this.id, headwordThesaurus.id) &&
        Objects.equals(this.language, headwordThesaurus.language) &&
        Objects.equals(this.lexicalEntries, headwordThesaurus.lexicalEntries) &&
        Objects.equals(this.type, headwordThesaurus.type) &&
        Objects.equals(this.word, headwordThesaurus.word);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, language, lexicalEntries, type, word);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HeadwordThesaurus {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lexicalEntries: ").append(toIndentedString(lexicalEntries)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    word: ").append(toIndentedString(word)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

