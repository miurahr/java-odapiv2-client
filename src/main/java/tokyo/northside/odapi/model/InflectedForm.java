/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tokyo.northside.odapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import tokyo.northside.odapi.model.DomainsList;
import tokyo.northside.odapi.model.LexicalCategory;
import tokyo.northside.odapi.model.RegionsList;
import tokyo.northside.odapi.model.RegistersList;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Description of an Inflected form.
 */
@ApiModel(description = "Description of an Inflected form.")
@JsonPropertyOrder({
  InflectedForm.JSON_PROPERTY_DOMAINS,
  InflectedForm.JSON_PROPERTY_GRAMMATICAL_FEATURES,
  InflectedForm.JSON_PROPERTY_INFLECTED_FORM,
  InflectedForm.JSON_PROPERTY_LEXICAL_CATEGORY,
  InflectedForm.JSON_PROPERTY_PRONUNCIATIONS,
  InflectedForm.JSON_PROPERTY_REGIONS,
  InflectedForm.JSON_PROPERTY_REGISTERS
})
@JsonTypeName("InflectedForm")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-27T22:37:51.170+09:00[Asia/Tokyo]")
public class InflectedForm {
  public static final String JSON_PROPERTY_DOMAINS = "domains";
  private DomainsList domains;

  public static final String JSON_PROPERTY_GRAMMATICAL_FEATURES = "grammaticalFeatures";
  private List<Object> grammaticalFeatures = null;

  public static final String JSON_PROPERTY_INFLECTED_FORM = "inflectedForm";
  private String inflectedForm;

  public static final String JSON_PROPERTY_LEXICAL_CATEGORY = "lexicalCategory";
  private LexicalCategory lexicalCategory;

  public static final String JSON_PROPERTY_PRONUNCIATIONS = "pronunciations";
  private List<Object> pronunciations = null;

  public static final String JSON_PROPERTY_REGIONS = "regions";
  private RegionsList regions;

  public static final String JSON_PROPERTY_REGISTERS = "registers";
  private RegistersList registers;

  public InflectedForm() { 
  }

  public InflectedForm domains(DomainsList domains) {
    
    this.domains = domains;
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DomainsList getDomains() {
    return domains;
  }


  @JsonProperty(JSON_PROPERTY_DOMAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomains(DomainsList domains) {
    this.domains = domains;
  }


  public InflectedForm grammaticalFeatures(List<Object> grammaticalFeatures) {
    
    this.grammaticalFeatures = grammaticalFeatures;
    return this;
  }

  public InflectedForm addGrammaticalFeaturesItem(Object grammaticalFeaturesItem) {
    if (this.grammaticalFeatures == null) {
      this.grammaticalFeatures = new ArrayList<>();
    }
    this.grammaticalFeatures.add(grammaticalFeaturesItem);
    return this;
  }

   /**
   * The different forms are correlated with meanings or functions which we text as &#39;features&#39;
   * @return grammaticalFeatures
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The different forms are correlated with meanings or functions which we text as 'features'")
  @JsonProperty(JSON_PROPERTY_GRAMMATICAL_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getGrammaticalFeatures() {
    return grammaticalFeatures;
  }


  @JsonProperty(JSON_PROPERTY_GRAMMATICAL_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrammaticalFeatures(List<Object> grammaticalFeatures) {
    this.grammaticalFeatures = grammaticalFeatures;
  }


  public InflectedForm inflectedForm(String inflectedForm) {
    
    this.inflectedForm = inflectedForm;
    return this;
  }

   /**
   * Canonical form of an inflection
   * @return inflectedForm
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Canonical form of an inflection")
  @JsonProperty(JSON_PROPERTY_INFLECTED_FORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInflectedForm() {
    return inflectedForm;
  }


  @JsonProperty(JSON_PROPERTY_INFLECTED_FORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInflectedForm(String inflectedForm) {
    this.inflectedForm = inflectedForm;
  }


  public InflectedForm lexicalCategory(LexicalCategory lexicalCategory) {
    
    this.lexicalCategory = lexicalCategory;
    return this;
  }

   /**
   * Get lexicalCategory
   * @return lexicalCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LEXICAL_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LexicalCategory getLexicalCategory() {
    return lexicalCategory;
  }


  @JsonProperty(JSON_PROPERTY_LEXICAL_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLexicalCategory(LexicalCategory lexicalCategory) {
    this.lexicalCategory = lexicalCategory;
  }


  public InflectedForm pronunciations(List<Object> pronunciations) {
    
    this.pronunciations = pronunciations;
    return this;
  }

  public InflectedForm addPronunciationsItem(Object pronunciationsItem) {
    if (this.pronunciations == null) {
      this.pronunciations = new ArrayList<>();
    }
    this.pronunciations.add(pronunciationsItem);
    return this;
  }

   /**
   * A list of possible pronunciations of a word
   * @return pronunciations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of possible pronunciations of a word")
  @JsonProperty(JSON_PROPERTY_PRONUNCIATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getPronunciations() {
    return pronunciations;
  }


  @JsonProperty(JSON_PROPERTY_PRONUNCIATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPronunciations(List<Object> pronunciations) {
    this.pronunciations = pronunciations;
  }


  public InflectedForm regions(RegionsList regions) {
    
    this.regions = regions;
    return this;
  }

   /**
   * Get regions
   * @return regions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RegionsList getRegions() {
    return regions;
  }


  @JsonProperty(JSON_PROPERTY_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegions(RegionsList regions) {
    this.regions = regions;
  }


  public InflectedForm registers(RegistersList registers) {
    
    this.registers = registers;
    return this;
  }

   /**
   * Get registers
   * @return registers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGISTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RegistersList getRegisters() {
    return registers;
  }


  @JsonProperty(JSON_PROPERTY_REGISTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegisters(RegistersList registers) {
    this.registers = registers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InflectedForm inflectedForm = (InflectedForm) o;
    return Objects.equals(this.domains, inflectedForm.domains) &&
        Objects.equals(this.grammaticalFeatures, inflectedForm.grammaticalFeatures) &&
        Objects.equals(this.inflectedForm, inflectedForm.inflectedForm) &&
        Objects.equals(this.lexicalCategory, inflectedForm.lexicalCategory) &&
        Objects.equals(this.pronunciations, inflectedForm.pronunciations) &&
        Objects.equals(this.regions, inflectedForm.regions) &&
        Objects.equals(this.registers, inflectedForm.registers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domains, grammaticalFeatures, inflectedForm, lexicalCategory, pronunciations, regions, registers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InflectedForm {\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    grammaticalFeatures: ").append(toIndentedString(grammaticalFeatures)).append("\n");
    sb.append("    inflectedForm: ").append(toIndentedString(inflectedForm)).append("\n");
    sb.append("    lexicalCategory: ").append(toIndentedString(lexicalCategory)).append("\n");
    sb.append("    pronunciations: ").append(toIndentedString(pronunciations)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    registers: ").append(toIndentedString(registers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

