/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tokyo.northside.odapi.v2;

import tokyo.northside.odapi.ApiException;
import tokyo.northside.odapi.model.ErrorSchema;
import tokyo.northside.odapi.model.Wordlist;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Ignore
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    /**
     * Retrieves possible dictionary matches to an input string
     *
     *  Use this to retrieve possible [headword](documentation/glossary?term&#x3D;headword) matches for a given string of text. The results are calculated using headword matching, fuzzy matching, and [lemmatization](documentation/glossary?term&#x3D;lemma).    &lt;div id&#x3D;\&quot;search\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchSourceLangGetTest() throws ApiException {
        String sourceLang = null;
        String q = null;
        String appId = null;
        String appKey = null;
        Boolean prefix = null;
        Integer limit = null;
        Integer offset = null;
        Wordlist response = api.searchSourceLangGet(sourceLang, q, appId, appKey, prefix, limit, offset);

        // TODO: test validations
    }
    /**
     * Retrieves possible dictionary matches to an input string
     *
     *  Use this to retrieve possible [headword](documentation/glossary?term&#x3D;headword) matches for a given string of text. The results are calculated using headword matching, fuzzy matching, and [lemmatization](documentation/glossary?term&#x3D;lemma).    &lt;div id&#x3D;\&quot;search\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchThesaurusSourceLangGetTest() throws ApiException {
        String sourceLang = null;
        String q = null;
        String appId = null;
        String appKey = null;
        Boolean prefix = null;
        Integer limit = null;
        Integer offset = null;
        Wordlist response = api.searchThesaurusSourceLangGet(sourceLang, q, appId, appKey, prefix, limit, offset);

        // TODO: test validations
    }
    /**
     * Retrieves possible headwords with translations
     *
     *  Use this to find possible headwords with translations for a given word.  &lt;div id&#x3D;\&quot;search_translation\&quot;&gt;&lt;/div&gt; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchTranslationsSourceLangSearchTargetLangSearchGetTest() throws ApiException {
        String sourceLangSearch = null;
        String targetLangSearch = null;
        String q = null;
        String appId = null;
        String appKey = null;
        Boolean prefix = null;
        Integer limit = null;
        Integer offset = null;
        Wordlist response = api.searchTranslationsSourceLangSearchTargetLangSearchGet(sourceLangSearch, targetLangSearch, q, appId, appKey, prefix, limit, offset);

        // TODO: test validations
    }
}
