/*
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package tokyo.northside.odapi.v2;

import tokyo.northside.odapi.ApiException;
import tokyo.northside.odapi.model.ErrorSchema;
import tokyo.northside.odapi.model.RetrieveEntry;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WordsApi
 */
@Ignore
public class WordsApiTest {

    private final WordsApi api = new WordsApi();

    /**
     * Check if an inflected form exists in the dictionary and retrieve the entries data of its root form.
     *
     *  Use this endpoint to retrieve definitions, examples and other information for a given dictionary word or an inflection (e.g., running &gt; run). The response contains information about the lemmas to which the given word/inflected form is linked.  The results can be filtered by lexicalCategories, domains, registers or grammaticalFeatures. Filters can be combined.  In addition, users can use fields to project some of the properties.  Combining different filters will build a query using &#39;AND&#39; operators, while if a filter contains more than one value it will build a query using &#39;OR&#39; operators. For example, a combination of filters like &#39;?grammaticalFeatures&#x3D;singular&amp;lexicalCategory&#x3D;noun,verb&#39; will return entries which match the query (&#39;noun&#39; OR &#39;verb&#39;) AND &#39;singular&#39;. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wordsSourceLangGetTest() throws ApiException {
        String sourceLang = null;
        String q = null;
        String appId = null;
        String appKey = null;
        List<String> fields = null;
        String grammaticalFeatures = null;
        String lexicalCategory = null;
        String domains = null;
        String registers = null;
        RetrieveEntry response = api.wordsSourceLangGet(sourceLang, q, appId, appKey, fields, grammaticalFeatures, lexicalCategory, domains, registers);

        // TODO: test validations
    }
}
